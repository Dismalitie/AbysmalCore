### YamlMime:ManagedReference
items:
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod
  commentId: T:AbysmalCore.Extensibility.AbysmalExtensibilityMethod
  id: AbysmalExtensibilityMethod
  parent: AbysmalCore.Extensibility
  children:
  - AbysmalCore.Extensibility.AbysmalExtensibilityMethod.#ctor(System.Reflection.MethodInfo,System.Object)
  - AbysmalCore.Extensibility.AbysmalExtensibilityMethod.GetParameterType(System.Int32)
  - AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke(System.Object[])
  - AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke``1(System.Func{System.Object,``0},System.Object[])
  - AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke``1(System.Object[])
  - AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Name
  - AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ParameterCount
  - AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ReturnType
  langs:
  - csharp
  - vb
  name: AbysmalExtensibilityMethod
  nameWithType: AbysmalExtensibilityMethod
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod
  type: Class
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: AbysmalExtensibilityMethod
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 114
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: Defines a method in the Abysmal Extensibility Framework
  example: []
  syntax:
    content: >-
      [DebugInfo("abysmal extensibility framework method", false)]

      public class AbysmalExtensibilityMethod
    content.vb: >-
      <DebugInfo("abysmal extensibility framework method", False)>

      Public Class AbysmalExtensibilityMethod
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: AbysmalCore.Debugging.DebugInfoAttribute
    ctor: AbysmalCore.Debugging.DebugInfoAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: abysmal extensibility framework method
    - type: System.Boolean
      value: false
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Name
  commentId: P:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Name
  id: Name
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityMethod
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AbysmalExtensibilityMethod.Name
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Name
  type: Property
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: Name
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 123
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: The name of the method
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Name*
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ReturnType
  commentId: P:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ReturnType
  id: ReturnType
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityMethod
  langs:
  - csharp
  - vb
  name: ReturnType
  nameWithType: AbysmalExtensibilityMethod.ReturnType
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ReturnType
  type: Property
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: ReturnType
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 127
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: What type the method returns
  example: []
  syntax:
    content: public Type ReturnType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property ReturnType As Type
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ReturnType*
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ParameterCount
  commentId: P:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ParameterCount
  id: ParameterCount
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityMethod
  langs:
  - csharp
  - vb
  name: ParameterCount
  nameWithType: AbysmalExtensibilityMethod.ParameterCount
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ParameterCount
  type: Property
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: ParameterCount
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 131
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: The number of parameters the method takes
  example: []
  syntax:
    content: public int ParameterCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ParameterCount As Integer
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ParameterCount*
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.#ctor(System.Reflection.MethodInfo,System.Object)
  commentId: M:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.#ctor(System.Reflection.MethodInfo,System.Object)
  id: '#ctor(System.Reflection.MethodInfo,System.Object)'
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityMethod
  langs:
  - csharp
  - vb
  name: AbysmalExtensibilityMethod(MethodInfo, object)
  nameWithType: AbysmalExtensibilityMethod.AbysmalExtensibilityMethod(MethodInfo, object)
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.AbysmalExtensibilityMethod(System.Reflection.MethodInfo, object)
  type: Constructor
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: .ctor
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 138
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: Creates a new AbysmalExtensibilityMethod wrapping the specified MethodInfo
  example: []
  syntax:
    content: public AbysmalExtensibilityMethod(MethodInfo mi, object instance)
    parameters:
    - id: mi
      type: System.Reflection.MethodInfo
      description: ''
    - id: instance
      type: System.Object
      description: ''
    content.vb: Public Sub New(mi As MethodInfo, instance As Object)
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.#ctor*
  nameWithType.vb: AbysmalExtensibilityMethod.New(MethodInfo, Object)
  fullName.vb: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.New(System.Reflection.MethodInfo, Object)
  name.vb: New(MethodInfo, Object)
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.GetParameterType(System.Int32)
  commentId: M:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.GetParameterType(System.Int32)
  id: GetParameterType(System.Int32)
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityMethod
  langs:
  - csharp
  - vb
  name: GetParameterType(int)
  nameWithType: AbysmalExtensibilityMethod.GetParameterType(int)
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.GetParameterType(int)
  type: Method
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: GetParameterType
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 152
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: Returns the type of the parameter at the specified index
  example: []
  syntax:
    content: public Type GetParameterType(int index)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    return:
      type: System.Type
    content.vb: Public Function GetParameterType(index As Integer) As Type
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.GetParameterType*
  nameWithType.vb: AbysmalExtensibilityMethod.GetParameterType(Integer)
  fullName.vb: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.GetParameterType(Integer)
  name.vb: GetParameterType(Integer)
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke(System.Object[])
  commentId: M:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke(System.Object[])
  id: Invoke(System.Object[])
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityMethod
  langs:
  - csharp
  - vb
  name: Invoke(params object[])
  nameWithType: AbysmalExtensibilityMethod.Invoke(params object[])
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke(params object[])
  type: Method
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: Invoke
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 158
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: Executes the method with the specified arguments
  example: []
  syntax:
    content: public object? Invoke(params object[] args)
    parameters:
    - id: args
      type: System.Object[]
      description: ''
    return:
      type: System.Object
    content.vb: Public Function Invoke(ParamArray args As Object()) As Object
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke*
  nameWithType.vb: AbysmalExtensibilityMethod.Invoke(ParamArray Object())
  fullName.vb: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke(ParamArray Object())
  name.vb: Invoke(ParamArray Object())
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke``1(System.Object[])
  commentId: M:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke``1(System.Object[])
  id: Invoke``1(System.Object[])
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityMethod
  langs:
  - csharp
  - vb
  name: Invoke<T>(params object[])
  nameWithType: AbysmalExtensibilityMethod.Invoke<T>(params object[])
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke<T>(params object[])
  type: Method
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: Invoke
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 169
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: Invokes the method with the specified arguments and converts the result to the specified type
  example: []
  syntax:
    content: public T Invoke<T>(params object[] args)
    parameters:
    - id: args
      type: System.Object[]
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function Invoke(Of T)(ParamArray args As Object()) As T
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke*
  nameWithType.vb: AbysmalExtensibilityMethod.Invoke(Of T)(ParamArray Object())
  fullName.vb: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke(Of T)(ParamArray Object())
  name.vb: Invoke(Of T)(ParamArray Object())
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke``1(System.Func{System.Object,``0},System.Object[])
  commentId: M:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke``1(System.Func{System.Object,``0},System.Object[])
  id: Invoke``1(System.Func{System.Object,``0},System.Object[])
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityMethod
  langs:
  - csharp
  - vb
  name: Invoke<T>(Func<object?, T>, params object[])
  nameWithType: AbysmalExtensibilityMethod.Invoke<T>(Func<object?, T>, params object[])
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke<T>(System.Func<object?, T>, params object[])
  type: Method
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: Invoke
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 180
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: Invokes the method with the specified arguments and converts the result using the provided converter function
  example: []
  syntax:
    content: public T Invoke<T>(Func<object?, T> converter, params object[] args)
    parameters:
    - id: converter
      type: System.Func{System.Object,{T}}
      description: ''
    - id: args
      type: System.Object[]
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
    content.vb: Public Function Invoke(Of T)(converter As Func(Of Object, T), ParamArray args As Object()) As T
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke*
  nameWithType.vb: AbysmalExtensibilityMethod.Invoke(Of T)(Func(Of Object, T), ParamArray Object())
  fullName.vb: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke(Of T)(System.Func(Of Object, T), ParamArray Object())
  name.vb: Invoke(Of T)(Func(Of Object, T), ParamArray Object())
references:
- uid: AbysmalCore.Extensibility
  commentId: N:AbysmalCore.Extensibility
  href: AbysmalCore.html
  name: AbysmalCore.Extensibility
  nameWithType: AbysmalCore.Extensibility
  fullName: AbysmalCore.Extensibility
  spec.csharp:
  - uid: AbysmalCore
    name: AbysmalCore
    href: AbysmalCore.html
  - name: .
  - uid: AbysmalCore.Extensibility
    name: Extensibility
    href: AbysmalCore.Extensibility.html
  spec.vb:
  - uid: AbysmalCore
    name: AbysmalCore
    href: AbysmalCore.html
  - name: .
  - uid: AbysmalCore.Extensibility
    name: Extensibility
    href: AbysmalCore.Extensibility.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Name*
  commentId: Overload:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Name
  href: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.html#AbysmalCore_Extensibility_AbysmalExtensibilityMethod_Name
  name: Name
  nameWithType: AbysmalExtensibilityMethod.Name
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ReturnType*
  commentId: Overload:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ReturnType
  href: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.html#AbysmalCore_Extensibility_AbysmalExtensibilityMethod_ReturnType
  name: ReturnType
  nameWithType: AbysmalExtensibilityMethod.ReturnType
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ReturnType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ParameterCount*
  commentId: Overload:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ParameterCount
  href: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.html#AbysmalCore_Extensibility_AbysmalExtensibilityMethod_ParameterCount
  name: ParameterCount
  nameWithType: AbysmalExtensibilityMethod.ParameterCount
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.ParameterCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.#ctor*
  commentId: Overload:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.#ctor
  href: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.html#AbysmalCore_Extensibility_AbysmalExtensibilityMethod__ctor_System_Reflection_MethodInfo_System_Object_
  name: AbysmalExtensibilityMethod
  nameWithType: AbysmalExtensibilityMethod.AbysmalExtensibilityMethod
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.AbysmalExtensibilityMethod
  nameWithType.vb: AbysmalExtensibilityMethod.New
  fullName.vb: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.New
  name.vb: New
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.GetParameterType*
  commentId: Overload:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.GetParameterType
  href: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.html#AbysmalCore_Extensibility_AbysmalExtensibilityMethod_GetParameterType_System_Int32_
  name: GetParameterType
  nameWithType: AbysmalExtensibilityMethod.GetParameterType
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.GetParameterType
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke*
  commentId: Overload:AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke
  href: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.html#AbysmalCore_Extensibility_AbysmalExtensibilityMethod_Invoke_System_Object___
  name: Invoke
  nameWithType: AbysmalExtensibilityMethod.Invoke
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.Invoke
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func{System.Object,{T}}
  commentId: T:System.Func{System.Object,``0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<object, T>
  nameWithType: Func<object, T>
  fullName: System.Func<object, T>
  nameWithType.vb: Func(Of Object, T)
  fullName.vb: System.Func(Of Object, T)
  name.vb: Func(Of Object, T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
