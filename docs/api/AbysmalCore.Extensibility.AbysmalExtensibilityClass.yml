### YamlMime:ManagedReference
items:
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass
  commentId: T:AbysmalCore.Extensibility.AbysmalExtensibilityClass
  id: AbysmalExtensibilityClass
  parent: AbysmalCore.Extensibility
  children:
  - AbysmalCore.Extensibility.AbysmalExtensibilityClass.#ctor(System.Object,System.Boolean)
  - AbysmalCore.Extensibility.AbysmalExtensibilityClass.#ctor(System.Type,System.Boolean)
  - AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasMethod(System.String)
  - AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasProperty(System.String)
  - AbysmalCore.Extensibility.AbysmalExtensibilityClass.Instance
  - AbysmalCore.Extensibility.AbysmalExtensibilityClass.Methods
  - AbysmalCore.Extensibility.AbysmalExtensibilityClass.New
  - AbysmalCore.Extensibility.AbysmalExtensibilityClass.Properties
  langs:
  - csharp
  - vb
  name: AbysmalExtensibilityClass
  nameWithType: AbysmalExtensibilityClass
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass
  type: Class
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: AbysmalExtensibilityClass
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 190
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: A uniform wrapper for classes used in the Abysmal Extensibility Framework
  example: []
  syntax:
    content: >-
      [DebugInfo("abysmal extensibility framework class", false)]

      public class AbysmalExtensibilityClass
    content.vb: >-
      <DebugInfo("abysmal extensibility framework class", False)>

      Public Class AbysmalExtensibilityClass
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: AbysmalCore.Debugging.DebugInfoAttribute
    ctor: AbysmalCore.Debugging.DebugInfoAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: abysmal extensibility framework class
    - type: System.Boolean
      value: false
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Properties
  commentId: P:AbysmalCore.Extensibility.AbysmalExtensibilityClass.Properties
  id: Properties
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityClass
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: AbysmalExtensibilityClass.Properties
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Properties
  type: Property
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: Properties
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 196
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: Properties of the class
  example: []
  syntax:
    content: public Dictionary<string, AbysmalExtensibilityProperty> Properties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,AbysmalCore.Extensibility.AbysmalExtensibilityProperty}
    content.vb: Public ReadOnly Property Properties As Dictionary(Of String, AbysmalExtensibilityProperty)
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Properties*
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Methods
  commentId: P:AbysmalCore.Extensibility.AbysmalExtensibilityClass.Methods
  id: Methods
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityClass
  langs:
  - csharp
  - vb
  name: Methods
  nameWithType: AbysmalExtensibilityClass.Methods
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Methods
  type: Property
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: Methods
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 200
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: Methods of the class
  example: []
  syntax:
    content: public Dictionary<string, AbysmalExtensibilityMethod> Methods { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,AbysmalCore.Extensibility.AbysmalExtensibilityMethod}
    content.vb: Public ReadOnly Property Methods As Dictionary(Of String, AbysmalExtensibilityMethod)
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Methods*
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Instance
  commentId: P:AbysmalCore.Extensibility.AbysmalExtensibilityClass.Instance
  id: Instance
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityClass
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: AbysmalExtensibilityClass.Instance
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Instance
  type: Property
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: Instance
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 204
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: The instance of the underlying class
  example: []
  syntax:
    content: public object Instance { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Instance As Object
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Instance*
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.#ctor(System.Type,System.Boolean)
  commentId: M:AbysmalCore.Extensibility.AbysmalExtensibilityClass.#ctor(System.Type,System.Boolean)
  id: '#ctor(System.Type,System.Boolean)'
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityClass
  langs:
  - csharp
  - vb
  name: AbysmalExtensibilityClass(Type, bool)
  nameWithType: AbysmalExtensibilityClass.AbysmalExtensibilityClass(Type, bool)
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.AbysmalExtensibilityClass(System.Type, bool)
  type: Constructor
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: .ctor
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 211
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: Creates a new AbysmalExtensibilityClass wrapping the specified type
  example: []
  syntax:
    content: public AbysmalExtensibilityClass(Type t, bool getPrivate = false)
    parameters:
    - id: t
      type: System.Type
      description: ''
    - id: getPrivate
      type: System.Boolean
      description: ''
    content.vb: Public Sub New(t As Type, getPrivate As Boolean = False)
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityClass.#ctor*
  nameWithType.vb: AbysmalExtensibilityClass.New(Type, Boolean)
  fullName.vb: AbysmalCore.Extensibility.AbysmalExtensibilityClass.New(System.Type, Boolean)
  name.vb: New(Type, Boolean)
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.#ctor(System.Object,System.Boolean)
  commentId: M:AbysmalCore.Extensibility.AbysmalExtensibilityClass.#ctor(System.Object,System.Boolean)
  id: '#ctor(System.Object,System.Boolean)'
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityClass
  langs:
  - csharp
  - vb
  name: AbysmalExtensibilityClass(object, bool)
  nameWithType: AbysmalExtensibilityClass.AbysmalExtensibilityClass(object, bool)
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.AbysmalExtensibilityClass(object, bool)
  type: Constructor
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: .ctor
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 242
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: Creates a new AbysmalExtensibilityClass wrapping the specified instance
  example: []
  syntax:
    content: public AbysmalExtensibilityClass(object instance, bool getPrivate = false)
    parameters:
    - id: instance
      type: System.Object
      description: ''
    - id: getPrivate
      type: System.Boolean
      description: ''
    content.vb: Public Sub New(instance As Object, getPrivate As Boolean = False)
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityClass.#ctor*
  nameWithType.vb: AbysmalExtensibilityClass.New(Object, Boolean)
  fullName.vb: AbysmalCore.Extensibility.AbysmalExtensibilityClass.New(Object, Boolean)
  name.vb: New(Object, Boolean)
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasMethod(System.String)
  commentId: M:AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasMethod(System.String)
  id: HasMethod(System.String)
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityClass
  langs:
  - csharp
  - vb
  name: HasMethod(string)
  nameWithType: AbysmalExtensibilityClass.HasMethod(string)
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasMethod(string)
  type: Method
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: HasMethod
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 273
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: Returns whether the class has a method with the specified name
  example: []
  syntax:
    content: public bool HasMethod(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasMethod(name As String) As Boolean
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasMethod*
  nameWithType.vb: AbysmalExtensibilityClass.HasMethod(String)
  fullName.vb: AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasMethod(String)
  name.vb: HasMethod(String)
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasProperty(System.String)
  commentId: M:AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasProperty(System.String)
  id: HasProperty(System.String)
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityClass
  langs:
  - csharp
  - vb
  name: HasProperty(string)
  nameWithType: AbysmalExtensibilityClass.HasProperty(string)
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasProperty(string)
  type: Method
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: HasProperty
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 279
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: Returns whether the class has a property with the specified name
  example: []
  syntax:
    content: public bool HasProperty(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasProperty(name As String) As Boolean
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasProperty*
  nameWithType.vb: AbysmalExtensibilityClass.HasProperty(String)
  fullName.vb: AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasProperty(String)
  name.vb: HasProperty(String)
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.New
  commentId: M:AbysmalCore.Extensibility.AbysmalExtensibilityClass.New
  id: New
  parent: AbysmalCore.Extensibility.AbysmalExtensibilityClass
  langs:
  - csharp
  - vb
  name: New()
  nameWithType: AbysmalExtensibilityClass.New()
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.New()
  type: Method
  source:
    remote:
      path: AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
      branch: master
      repo: https://github.com/Dismalitie/AbysmalCore.git
    id: New
    path: ../AbysmalCore/Extensibility/AbysmalExtensibilityClass.cs
    startLine: 284
  assemblies:
  - AbysmalCore
  namespace: AbysmalCore.Extensibility
  summary: Instantiates a new instance of the underlying class
  example: []
  syntax:
    content: public object New()
    return:
      type: System.Object
      description: ''
    content.vb: Public Function [New]() As Object
  overload: AbysmalCore.Extensibility.AbysmalExtensibilityClass.New*
references:
- uid: AbysmalCore.Extensibility
  commentId: N:AbysmalCore.Extensibility
  href: AbysmalCore.html
  name: AbysmalCore.Extensibility
  nameWithType: AbysmalCore.Extensibility
  fullName: AbysmalCore.Extensibility
  spec.csharp:
  - uid: AbysmalCore
    name: AbysmalCore
    href: AbysmalCore.html
  - name: .
  - uid: AbysmalCore.Extensibility
    name: Extensibility
    href: AbysmalCore.Extensibility.html
  spec.vb:
  - uid: AbysmalCore
    name: AbysmalCore
    href: AbysmalCore.html
  - name: .
  - uid: AbysmalCore.Extensibility
    name: Extensibility
    href: AbysmalCore.Extensibility.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Properties*
  commentId: Overload:AbysmalCore.Extensibility.AbysmalExtensibilityClass.Properties
  href: AbysmalCore.Extensibility.AbysmalExtensibilityClass.html#AbysmalCore_Extensibility_AbysmalExtensibilityClass_Properties
  name: Properties
  nameWithType: AbysmalExtensibilityClass.Properties
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Properties
- uid: System.Collections.Generic.Dictionary{System.String,AbysmalCore.Extensibility.AbysmalExtensibilityProperty}
  commentId: T:System.Collections.Generic.Dictionary{System.String,AbysmalCore.Extensibility.AbysmalExtensibilityProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, AbysmalExtensibilityProperty>
  nameWithType: Dictionary<string, AbysmalExtensibilityProperty>
  fullName: System.Collections.Generic.Dictionary<string, AbysmalCore.Extensibility.AbysmalExtensibilityProperty>
  nameWithType.vb: Dictionary(Of String, AbysmalExtensibilityProperty)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, AbysmalCore.Extensibility.AbysmalExtensibilityProperty)
  name.vb: Dictionary(Of String, AbysmalExtensibilityProperty)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: AbysmalCore.Extensibility.AbysmalExtensibilityProperty
    name: AbysmalExtensibilityProperty
    href: AbysmalCore.Extensibility.AbysmalExtensibilityProperty.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: AbysmalCore.Extensibility.AbysmalExtensibilityProperty
    name: AbysmalExtensibilityProperty
    href: AbysmalCore.Extensibility.AbysmalExtensibilityProperty.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Methods*
  commentId: Overload:AbysmalCore.Extensibility.AbysmalExtensibilityClass.Methods
  href: AbysmalCore.Extensibility.AbysmalExtensibilityClass.html#AbysmalCore_Extensibility_AbysmalExtensibilityClass_Methods
  name: Methods
  nameWithType: AbysmalExtensibilityClass.Methods
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Methods
- uid: System.Collections.Generic.Dictionary{System.String,AbysmalCore.Extensibility.AbysmalExtensibilityMethod}
  commentId: T:System.Collections.Generic.Dictionary{System.String,AbysmalCore.Extensibility.AbysmalExtensibilityMethod}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, AbysmalExtensibilityMethod>
  nameWithType: Dictionary<string, AbysmalExtensibilityMethod>
  fullName: System.Collections.Generic.Dictionary<string, AbysmalCore.Extensibility.AbysmalExtensibilityMethod>
  nameWithType.vb: Dictionary(Of String, AbysmalExtensibilityMethod)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, AbysmalCore.Extensibility.AbysmalExtensibilityMethod)
  name.vb: Dictionary(Of String, AbysmalExtensibilityMethod)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod
    name: AbysmalExtensibilityMethod
    href: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: AbysmalCore.Extensibility.AbysmalExtensibilityMethod
    name: AbysmalExtensibilityMethod
    href: AbysmalCore.Extensibility.AbysmalExtensibilityMethod.html
  - name: )
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Instance*
  commentId: Overload:AbysmalCore.Extensibility.AbysmalExtensibilityClass.Instance
  href: AbysmalCore.Extensibility.AbysmalExtensibilityClass.html#AbysmalCore_Extensibility_AbysmalExtensibilityClass_Instance
  name: Instance
  nameWithType: AbysmalExtensibilityClass.Instance
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.Instance
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.#ctor*
  commentId: Overload:AbysmalCore.Extensibility.AbysmalExtensibilityClass.#ctor
  href: AbysmalCore.Extensibility.AbysmalExtensibilityClass.html#AbysmalCore_Extensibility_AbysmalExtensibilityClass__ctor_System_Type_System_Boolean_
  name: AbysmalExtensibilityClass
  nameWithType: AbysmalExtensibilityClass.AbysmalExtensibilityClass
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.AbysmalExtensibilityClass
  nameWithType.vb: AbysmalExtensibilityClass.New
  fullName.vb: AbysmalCore.Extensibility.AbysmalExtensibilityClass.New
  name.vb: New
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasMethod*
  commentId: Overload:AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasMethod
  href: AbysmalCore.Extensibility.AbysmalExtensibilityClass.html#AbysmalCore_Extensibility_AbysmalExtensibilityClass_HasMethod_System_String_
  name: HasMethod
  nameWithType: AbysmalExtensibilityClass.HasMethod
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasMethod
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasProperty*
  commentId: Overload:AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasProperty
  href: AbysmalCore.Extensibility.AbysmalExtensibilityClass.html#AbysmalCore_Extensibility_AbysmalExtensibilityClass_HasProperty_System_String_
  name: HasProperty
  nameWithType: AbysmalExtensibilityClass.HasProperty
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.HasProperty
- uid: AbysmalCore.Extensibility.AbysmalExtensibilityClass.New*
  commentId: Overload:AbysmalCore.Extensibility.AbysmalExtensibilityClass.New
  href: AbysmalCore.Extensibility.AbysmalExtensibilityClass.html#AbysmalCore_Extensibility_AbysmalExtensibilityClass_New
  name: New
  nameWithType: AbysmalExtensibilityClass.New
  fullName: AbysmalCore.Extensibility.AbysmalExtensibilityClass.New
