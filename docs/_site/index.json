{
  "api/AbysmalCore.AbysmalConsole.html": {
    "href": "api/AbysmalCore.AbysmalConsole.html",
    "title": "Class AbysmalConsole | AbysmalCore",
    "summary": "Class AbysmalConsole Namespace AbysmalCore Assembly AbysmalCore.dll Standard formatted console input and output handler [DebugInfo(\"standard fmtd output and input\", false)] public class AbysmalConsole Inheritance object AbysmalConsole Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AbysmalConsole() Creates a new AbysmalConsole instance public AbysmalConsole() Methods Ask(string) Prompts the user with a yes/no question and returns their response public bool? Ask(string msg) Parameters msg string Returns bool? null if key is not y/n Clear() Clears the console output buffer and the console screen public void Clear() GetOutput() Returns console messages and inputs created and recieved by this instance public string GetOutput() Returns string Prompt<T>(string, string?, Func<string, T>?) Asks the user for input and converts it to the specified type public T? Prompt<T>(string msg, string? type = null, Func<string, T>? converter = null) Parameters msg string type string converter Func<string, T> Returns T Type Parameters T WriteColor(string, ConsoleColor, ConsoleColor?) Writes a colored string to the console public void WriteColor(string s, ConsoleColor fore, ConsoleColor? back = null) Parameters s string fore ConsoleColor back ConsoleColor? WriteColorLn(string, ConsoleColor, ConsoleColor?) Writes a colored string to the console with a newline public void WriteColorLn(string s, ConsoleColor fore, ConsoleColor? back = null) Parameters s string fore ConsoleColor back ConsoleColor? WriteColorLns((string s, ConsoleColor fore, ConsoleColor? back)[]) Writes multiple single-colored lines to the console public void WriteColorLns((string s, ConsoleColor fore, ConsoleColor? back)[] lines) Parameters lines (string s, ConsoleColor fore, ConsoleColor? back)[] WriteColors((string s, ConsoleColor fore, ConsoleColor? back)[]) Writes multiple colors in the same string to the console public void WriteColors((string s, ConsoleColor fore, ConsoleColor? back)[] colors) Parameters colors (string s, ConsoleColor fore, ConsoleColor? back)[] WriteOutput(string) Writes the console output buffer to a file public void WriteOutput(string path) Parameters path string"
  },
  "api/AbysmalCore.Debugging.AbysmalDebug.html": {
    "href": "api/AbysmalCore.Debugging.AbysmalDebug.html",
    "title": "Class AbysmalDebug | AbysmalCore",
    "summary": "Class AbysmalDebug Namespace AbysmalCore.Debugging Assembly AbysmalCore.dll Standard debugging class for logging messages, warnings and errors to the console [DebugInfo(\"standard debug lib\", true)] public class AbysmalDebug Inheritance object AbysmalDebug Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Enabled Determines whether to write logs to the console public static bool Enabled Field Value bool Methods Error(object, string, bool) Logs an error message to the console public static void Error(object @this, string msg, bool fatal = false) Parameters this object msg string fatal bool Log(object, string, bool) Logs a standard message to the console public static void Log(object @this, string msg, bool important = false) Parameters this object msg string important bool Pause(bool, bool, string) Pauses execution until a key is pressed if value does not equal expected public static void Pause(bool value = false, bool expected = true, string reason = \"unconditional\") Parameters value bool expected bool reason string Stop(bool, bool, string) Stops execution indefinitely if value does not equal expected public static void Stop(bool value = false, bool expected = true, string reason = \"unconditional\") Parameters value bool expected bool reason string Warn(object, string) Logs a standard warning to the console public static void Warn(object @this, string msg) Parameters this object msg string WriteLogs(string) Writes the current logs to a file public static void WriteLogs(string path) Parameters path string"
  },
  "api/AbysmalCore.Debugging.DebugInfoAttribute.ImportanceActionType.html": {
    "href": "api/AbysmalCore.Debugging.DebugInfoAttribute.ImportanceActionType.html",
    "title": "Enum DebugInfoAttribute.ImportanceActionType | AbysmalCore",
    "summary": "Enum DebugInfoAttribute.ImportanceActionType Namespace AbysmalCore.Debugging Assembly AbysmalCore.dll Determines what to do upon logging an important message public enum DebugInfoAttribute.ImportanceActionType Fields Highlight = 0 Highlights the message in magenta Pause = 1 Pauses application execution until console input is provided"
  },
  "api/AbysmalCore.Debugging.DebugInfoAttribute.html": {
    "href": "api/AbysmalCore.Debugging.DebugInfoAttribute.html",
    "title": "Class DebugInfoAttribute | AbysmalCore",
    "summary": "Class DebugInfoAttribute Namespace AbysmalCore.Debugging Assembly AbysmalCore.dll Attribute for adding debug information to classes like names and importance [AttributeUsage(AttributeTargets.All, Inherited = false, AllowMultiple = false)] [DebugInfo(\"info to display in a debug message\", false)] public class DebugInfoAttribute : Attribute Inheritance object Attribute DebugInfoAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DebugInfoAttribute(string, bool) Adds debug info to a class public DebugInfoAttribute(string desc, bool important = false) Parameters desc string important bool Fields Description Breif description of the class public readonly string Description Field Value string ImportanceAction Determines what to do upon an important message being logged public static DebugInfoAttribute.ImportanceActionType ImportanceAction Field Value DebugInfoAttribute.ImportanceActionType Important A short more readable name public readonly bool Important Field Value bool"
  },
  "api/AbysmalCore.Debugging.html": {
    "href": "api/AbysmalCore.Debugging.html",
    "title": "Namespace AbysmalCore.Debugging | AbysmalCore",
    "summary": "Namespace AbysmalCore.Debugging Classes AbysmalDebug Standard debugging class for logging messages, warnings and errors to the console DebugInfoAttribute Attribute for adding debug information to classes like names and importance Enums DebugInfoAttribute.ImportanceActionType Determines what to do upon logging an important message"
  },
  "api/AbysmalCore.Extensibility.AbysmalExtensibility.html": {
    "href": "api/AbysmalCore.Extensibility.AbysmalExtensibility.html",
    "title": "Class AbysmalExtensibility | AbysmalCore",
    "summary": "Class AbysmalExtensibility Namespace AbysmalCore.Extensibility Assembly AbysmalCore.dll Compiler and wrapper initializer [DebugInfo(\"abysmal extensibility framework\", false)] public class AbysmalExtensibility Inheritance object AbysmalExtensibility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CompileAssembly(string) Compiles C# source code into an assembly public static Assembly CompileAssembly(string src) Parameters src string Returns Assembly GetClass(Assembly, string, bool) Returns an ExtensibilityClass instance for uniform access to methods and properties of a class in a compiled assembly public static AbysmalExtensibilityClass GetClass(Assembly asm, string cls, bool getPrivate = false) Parameters asm Assembly cls string getPrivate bool Returns AbysmalExtensibilityClass GetUniformClass<T>(Assembly, string) Returns an instance of a class from a compiled assembly that is matched to an interface or abstract class public static T GetUniformClass<T>(Assembly asm, string cls) Parameters asm Assembly cls string Returns T Type Parameters T"
  },
  "api/AbysmalCore.Extensibility.AbysmalExtensibilityClass.html": {
    "href": "api/AbysmalCore.Extensibility.AbysmalExtensibilityClass.html",
    "title": "Class AbysmalExtensibilityClass | AbysmalCore",
    "summary": "Class AbysmalExtensibilityClass Namespace AbysmalCore.Extensibility Assembly AbysmalCore.dll A uniform wrapper for classes used in the Abysmal Extensibility Framework [DebugInfo(\"abysmal extensibility framework class\", false)] public class AbysmalExtensibilityClass Inheritance object AbysmalExtensibilityClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AbysmalExtensibilityClass(object, bool) Creates a new AbysmalExtensibilityClass wrapping the specified instance public AbysmalExtensibilityClass(object instance, bool getPrivate = false) Parameters instance object getPrivate bool AbysmalExtensibilityClass(Type, bool) Creates a new AbysmalExtensibilityClass wrapping the specified type public AbysmalExtensibilityClass(Type t, bool getPrivate = false) Parameters t Type getPrivate bool Properties Instance The instance of the underlying class public object Instance { get; } Property Value object Methods Methods of the class public Dictionary<string, AbysmalExtensibilityMethod> Methods { get; } Property Value Dictionary<string, AbysmalExtensibilityMethod> Properties Properties of the class public Dictionary<string, AbysmalExtensibilityProperty> Properties { get; } Property Value Dictionary<string, AbysmalExtensibilityProperty> Methods HasMethod(string) Returns whether the class has a method with the specified name public bool HasMethod(string name) Parameters name string Returns bool HasProperty(string) Returns whether the class has a property with the specified name public bool HasProperty(string name) Parameters name string Returns bool New() Instantiates a new instance of the underlying class public object New() Returns object"
  },
  "api/AbysmalCore.Extensibility.AbysmalExtensibilityMethod.html": {
    "href": "api/AbysmalCore.Extensibility.AbysmalExtensibilityMethod.html",
    "title": "Class AbysmalExtensibilityMethod | AbysmalCore",
    "summary": "Class AbysmalExtensibilityMethod Namespace AbysmalCore.Extensibility Assembly AbysmalCore.dll Defines a method in the Abysmal Extensibility Framework [DebugInfo(\"abysmal extensibility framework method\", false)] public class AbysmalExtensibilityMethod Inheritance object AbysmalExtensibilityMethod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AbysmalExtensibilityMethod(MethodInfo, object) Creates a new AbysmalExtensibilityMethod wrapping the specified MethodInfo public AbysmalExtensibilityMethod(MethodInfo mi, object instance) Parameters mi MethodInfo instance object Properties Name The name of the method public string Name { get; } Property Value string ParameterCount The number of parameters the method takes public int ParameterCount { get; } Property Value int ReturnType What type the method returns public Type ReturnType { get; } Property Value Type Methods GetParameterType(int) Returns the type of the parameter at the specified index public Type GetParameterType(int index) Parameters index int Returns Type Invoke(params object[]) Executes the method with the specified arguments public object? Invoke(params object[] args) Parameters args object[] Returns object Invoke<T>(Func<object?, T>, params object[]) Invokes the method with the specified arguments and converts the result using the provided converter function public T Invoke<T>(Func<object?, T> converter, params object[] args) Parameters converter Func<object, T> args object[] Returns T Type Parameters T Invoke<T>(params object[]) Invokes the method with the specified arguments and converts the result to the specified type public T Invoke<T>(params object[] args) Parameters args object[] Returns T Type Parameters T"
  },
  "api/AbysmalCore.Extensibility.AbysmalExtensibilityProperty.html": {
    "href": "api/AbysmalCore.Extensibility.AbysmalExtensibilityProperty.html",
    "title": "Class AbysmalExtensibilityProperty | AbysmalCore",
    "summary": "Class AbysmalExtensibilityProperty Namespace AbysmalCore.Extensibility Assembly AbysmalCore.dll Defines a property or field in the Abysmal Extensibility Framework [DebugInfo(\"abysmal extensibility framework property\", false)] public class AbysmalExtensibilityProperty Inheritance object AbysmalExtensibilityProperty Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AbysmalExtensibilityProperty(FieldInfo, object) Creates a new AbysmalExtensibilityProperty wrapping the specified FieldInfo public AbysmalExtensibilityProperty(FieldInfo fi, object instance) Parameters fi FieldInfo instance object AbysmalExtensibilityProperty(PropertyInfo, object) Creates a new AbysmalExtensibilityProperty wrapping the specified PropertyInfo public AbysmalExtensibilityProperty(PropertyInfo pi, object instance) Parameters pi PropertyInfo instance object Properties IsPrivate Whether the property or field is private public bool IsPrivate { get; } Property Value bool Name The name of the property or field public string Name { get; } Property Value string Type The type of the property or field public Type Type { get; } Property Value Type Value Gets and sets the value of the property or field public object? Value { get; set; } Property Value object"
  },
  "api/AbysmalCore.Extensibility.html": {
    "href": "api/AbysmalCore.Extensibility.html",
    "title": "Namespace AbysmalCore.Extensibility | AbysmalCore",
    "summary": "Namespace AbysmalCore.Extensibility Classes AbysmalExtensibility Compiler and wrapper initializer AbysmalExtensibilityClass A uniform wrapper for classes used in the Abysmal Extensibility Framework AbysmalExtensibilityMethod Defines a method in the Abysmal Extensibility Framework AbysmalExtensibilityProperty Defines a property or field in the Abysmal Extensibility Framework"
  },
  "api/AbysmalCore.UI.Controls.Button.html": {
    "href": "api/AbysmalCore.UI.Controls.Button.html",
    "title": "Class Button | AbysmalCore",
    "summary": "Class Button Namespace AbysmalCore.UI.Controls Assembly AbysmalCore.dll A clickable button control [DebugInfo(\"button control\", false)] public class Button : UIElement Inheritance object UIElement Button Inherited Members UIElement.Name UIElement.Position UIElement.Size UIElement.SupportedBrushes UIElement._UseFallbackForUnsupportedBrushes UIElement.Children UIElement.AddChild(UIElement) UIElement.RemoveChild(UIElement) UIElement.RemoveChild(string) UIElement.GetChild(string) UIElement.GetChildren() UIElement.Hovered UIElement.Clicked UIElement.OnClicked UIElement.OnStateChanged UIElement.OnHovered UIElement.OnMouseEnter UIElement.OnMouseExit UIElement.Enabled UIElement.Visible UIElement.StyleMap UIElement.CurrentStyle UIElement.Draw() UIElement.Disable() UIElement.Enable() UIElement.Hide() UIElement.Show() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Button(string, Vector2Int, Vector2Int?, int) Creates a new button public Button(string text, Vector2Int position, Vector2Int? size = null, int fontSize = 20) Parameters text string position Vector2Int size Vector2Int? fontSize int Fields FontSize The size of the text public int FontSize Field Value int Text The text in the button public string Text Field Value string Methods _draw() Draws the actual control protected override void _draw()"
  },
  "api/AbysmalCore.UI.Controls.Label.html": {
    "href": "api/AbysmalCore.UI.Controls.Label.html",
    "title": "Class Label | AbysmalCore",
    "summary": "Class Label Namespace AbysmalCore.UI.Controls Assembly AbysmalCore.dll A simple text label control [DebugInfo(\"label control\", false)] public class Label : UIElement Inheritance object UIElement Label Inherited Members UIElement.Name UIElement.Position UIElement.Size UIElement.SupportedBrushes UIElement._UseFallbackForUnsupportedBrushes UIElement.Children UIElement.AddChild(UIElement) UIElement.RemoveChild(UIElement) UIElement.RemoveChild(string) UIElement.GetChild(string) UIElement.GetChildren() UIElement.Hovered UIElement.Clicked UIElement.OnClicked UIElement.OnStateChanged UIElement.OnHovered UIElement.OnMouseEnter UIElement.OnMouseExit UIElement.Enabled UIElement.Visible UIElement.StyleMap UIElement.CurrentStyle UIElement.Draw() UIElement.Disable() UIElement.Enable() UIElement.Hide() UIElement.Show() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Label(string, Vector2Int, int) Creates a label public Label(string text, Vector2Int position, int fontSize = 20) Parameters text string position Vector2Int fontSize int Fields FontSize The size of the text public int FontSize Field Value int Text The text to draw public string Text Field Value string Methods _draw() Draws the actual control protected override void _draw()"
  },
  "api/AbysmalCore.UI.Controls.Panel.html": {
    "href": "api/AbysmalCore.UI.Controls.Panel.html",
    "title": "Class Panel | AbysmalCore",
    "summary": "Class Panel Namespace AbysmalCore.UI.Controls Assembly AbysmalCore.dll A container panel control [DebugInfo(\"panel control\", false)] public class Panel : UIElement Inheritance object UIElement Panel Inherited Members UIElement.Name UIElement.Position UIElement.Size UIElement.SupportedBrushes UIElement._UseFallbackForUnsupportedBrushes UIElement.Children UIElement.AddChild(UIElement) UIElement.RemoveChild(UIElement) UIElement.RemoveChild(string) UIElement.GetChild(string) UIElement.GetChildren() UIElement.Hovered UIElement.Clicked UIElement.OnClicked UIElement.OnStateChanged UIElement.OnHovered UIElement.OnMouseEnter UIElement.OnMouseExit UIElement.Enabled UIElement.Visible UIElement.StyleMap UIElement.CurrentStyle UIElement.Draw() UIElement.Disable() UIElement.Enable() UIElement.Hide() UIElement.Show() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Panel(Vector2Int, Vector2Int, List<UIElement>?) Creates a panel public Panel(Vector2Int position, Vector2Int size, List<UIElement>? children = null) Parameters position Vector2Int size Vector2Int children List<UIElement> Methods _draw() Draws the actual control protected override void _draw()"
  },
  "api/AbysmalCore.UI.Controls.Picture.html": {
    "href": "api/AbysmalCore.UI.Controls.Picture.html",
    "title": "Class Picture | AbysmalCore",
    "summary": "Class Picture Namespace AbysmalCore.UI.Controls Assembly AbysmalCore.dll A control for displaying a picture/image [DebugInfo(\"picture control\", false)] public class Picture : UIElement Inheritance object UIElement Picture Inherited Members UIElement.Name UIElement.Position UIElement.Size UIElement.SupportedBrushes UIElement._UseFallbackForUnsupportedBrushes UIElement.Children UIElement.AddChild(UIElement) UIElement.RemoveChild(UIElement) UIElement.RemoveChild(string) UIElement.GetChild(string) UIElement.GetChildren() UIElement.Hovered UIElement.Clicked UIElement.OnClicked UIElement.OnStateChanged UIElement.OnHovered UIElement.OnMouseEnter UIElement.OnMouseExit UIElement.Enabled UIElement.Visible UIElement.StyleMap UIElement.CurrentStyle UIElement.Draw() UIElement.Disable() UIElement.Enable() UIElement.Hide() UIElement.Show() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Picture(Image, bool) Creates a new Picture control public Picture(Image image, bool tint = false) Parameters image Image tint bool Fields Image The image to draw public Image Image Field Value Image Tint Whether to tint the image with a color public bool Tint Field Value bool Methods _draw() Draws the actual control protected override void _draw()"
  },
  "api/AbysmalCore.UI.Controls.Toggle.StateChangedEventHandler.html": {
    "href": "api/AbysmalCore.UI.Controls.Toggle.StateChangedEventHandler.html",
    "title": "Delegate Toggle.StateChangedEventHandler | AbysmalCore",
    "summary": "Delegate Toggle.StateChangedEventHandler Namespace AbysmalCore.UI.Controls Assembly AbysmalCore.dll Delegate used when a toggle is clicked public delegate void Toggle.StateChangedEventHandler(UIElement sender, bool state, Vector2Int mouse, int frame) Parameters sender UIElement state bool mouse Vector2Int frame int"
  },
  "api/AbysmalCore.UI.Controls.Toggle.html": {
    "href": "api/AbysmalCore.UI.Controls.Toggle.html",
    "title": "Class Toggle | AbysmalCore",
    "summary": "Class Toggle Namespace AbysmalCore.UI.Controls Assembly AbysmalCore.dll A button-like control with 2 states: on and off [DebugInfo(\"toggle control\", false)] public class Toggle : UIElement Inheritance object UIElement Toggle Inherited Members UIElement.Name UIElement.Position UIElement.Size UIElement.SupportedBrushes UIElement._UseFallbackForUnsupportedBrushes UIElement.Children UIElement.AddChild(UIElement) UIElement.RemoveChild(UIElement) UIElement.RemoveChild(string) UIElement.GetChild(string) UIElement.GetChildren() UIElement.Hovered UIElement.Clicked UIElement.OnClicked UIElement.OnStateChanged UIElement.OnHovered UIElement.OnMouseEnter UIElement.OnMouseExit UIElement.Enabled UIElement.Visible UIElement.StyleMap UIElement.CurrentStyle UIElement.Draw() UIElement.Disable() UIElement.Enable() UIElement.Hide() UIElement.Show() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Toggle(Vector2Int, Vector2Int, bool, string, int) Creates a new toggle public Toggle(Vector2Int position, Vector2Int size, bool state = false, string label = \"\", int fontSize = 18) Parameters position Vector2Int size Vector2Int state bool label string fontSize int Fields FontSize The size of the label public int FontSize Field Value int Text The optional label next to the toggle public string Text Field Value string Properties State Whether the toggle is checked or unchecked public bool State { get; set; } Property Value bool Methods _draw() Draws the actual control protected override void _draw() Events OnToggleStateChanged Event fired when toggled public event Toggle.StateChangedEventHandler? OnToggleStateChanged Event Type Toggle.StateChangedEventHandler"
  },
  "api/AbysmalCore.UI.Controls.html": {
    "href": "api/AbysmalCore.UI.Controls.html",
    "title": "Namespace AbysmalCore.UI.Controls | AbysmalCore",
    "summary": "Namespace AbysmalCore.UI.Controls Classes Button A clickable button control Label A simple text label control Panel A container panel control Picture A control for displaying a picture/image Toggle A button-like control with 2 states: on and off Delegates Toggle.StateChangedEventHandler Delegate used when a toggle is clicked"
  },
  "api/AbysmalCore.UI.DwmPInvokeHelper.MaterialType.html": {
    "href": "api/AbysmalCore.UI.DwmPInvokeHelper.MaterialType.html",
    "title": "Enum DwmPInvokeHelper.MaterialType | AbysmalCore",
    "summary": "Enum DwmPInvokeHelper.MaterialType Namespace AbysmalCore.UI Assembly AbysmalCore.dll Type of window material public enum DwmPInvokeHelper.MaterialType Fields Acrylic = 3 Semi-transparent material Mica = 2 Slightly translucent material None = 1 No material Tabbed = 4 Translucent material"
  },
  "api/AbysmalCore.UI.DwmPInvokeHelper.html": {
    "href": "api/AbysmalCore.UI.DwmPInvokeHelper.html",
    "title": "Class DwmPInvokeHelper | AbysmalCore",
    "summary": "Class DwmPInvokeHelper Namespace AbysmalCore.UI Assembly AbysmalCore.dll Windows-platform specific window helper [DebugInfo(\"windows dwm api helper\", true)] public class DwmPInvokeHelper Inheritance object DwmPInvokeHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetBorderColor(nint, int, int, int) Sets the color of the window border public static void SetBorderColor(nint hWnd, int r, int g, int b) Parameters hWnd nint r int g int b int SetMaterial(nint, MaterialType) Sets the material of a window background public static void SetMaterial(nint hWnd, DwmPInvokeHelper.MaterialType material) Parameters hWnd nint material DwmPInvokeHelper.MaterialType SetNonClientColor(nint, int, int, int) Sets the color of the titlebar public static void SetNonClientColor(nint hWnd, int r, int g, int b) Parameters hWnd nint r int g int b int SetNonClientTextColor(nint, int, int, int) Sets the text of the titlebar caption public static void SetNonClientTextColor(nint hWnd, int r, int g, int b) Parameters hWnd nint r int g int b int"
  },
  "api/AbysmalCore.UI.Styling.Brushes.ImageBrush.html": {
    "href": "api/AbysmalCore.UI.Styling.Brushes.ImageBrush.html",
    "title": "Class ImageBrush | AbysmalCore",
    "summary": "Class ImageBrush Namespace AbysmalCore.UI.Styling.Brushes Assembly AbysmalCore.dll Draws an image [DebugInfo(\"brush\", false)] public class ImageBrush : IBrush Inheritance object ImageBrush Implements IBrush Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ImageBrush(Image, Color?) Creates a new image brush public ImageBrush(Image img, Color? color = null) Parameters img Image color Color? Fields Image Image to draw public Image Image Field Value Image Properties Type The type of brush public IBrush.BrushType Type { get; } Property Value IBrush.BrushType Methods DrawRectangle(Vector2Int, Vector2Int) Draws a rectangle public void DrawRectangle(Vector2Int position, Vector2Int size) Parameters position Vector2Int size Vector2Int DrawRectangleRounded(Vector2Int, Vector2Int, int) Draws a rectangle with rounded corners public void DrawRectangleRounded(Vector2Int position, Vector2Int size, int radius) Parameters position Vector2Int size Vector2Int radius int DrawText(Font, string, Vector2Int, int) Draws text public void DrawText(Font font, string text, Vector2Int position, int fontSize) Parameters font Font text string position Vector2Int fontSize int Fallback() Returns a solid color if unsupported public Color Fallback() Returns Color"
  },
  "api/AbysmalCore.UI.Styling.Brushes.LinearGradientBrush.GradientDirection.html": {
    "href": "api/AbysmalCore.UI.Styling.Brushes.LinearGradientBrush.GradientDirection.html",
    "title": "Enum LinearGradientBrush.GradientDirection | AbysmalCore",
    "summary": "Enum LinearGradientBrush.GradientDirection Namespace AbysmalCore.UI.Styling.Brushes Assembly AbysmalCore.dll The direction of the gradient public enum LinearGradientBrush.GradientDirection Fields DiagonalLeft = 3 Draws color 1 in the top left, color 2 in the bottom right DiagonalRight = 2 Draws color 1 in the bottom left, color 2 in the top right Horizontal = 1 Draws color 1 on the left, color 2 on the right Vertical = 0 Draws color 1 at the bottom, color 2 at the top"
  },
  "api/AbysmalCore.UI.Styling.Brushes.LinearGradientBrush.html": {
    "href": "api/AbysmalCore.UI.Styling.Brushes.LinearGradientBrush.html",
    "title": "Class LinearGradientBrush | AbysmalCore",
    "summary": "Class LinearGradientBrush Namespace AbysmalCore.UI.Styling.Brushes Assembly AbysmalCore.dll Draws a 2-color linear gradient [DebugInfo(\"brush\", false)] public class LinearGradientBrush : IBrush Inheritance object LinearGradientBrush Implements IBrush Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LinearGradientBrush(GradientDirection, Color, Color) Creates a new linear gradient brush public LinearGradientBrush(LinearGradientBrush.GradientDirection direction, Color c1, Color c2) Parameters direction LinearGradientBrush.GradientDirection c1 Color c2 Color Fields Color1 The first color public Color Color1 Field Value Color Color2 The second color public Color Color2 Field Value Color Direction The direction to draw the gradient public LinearGradientBrush.GradientDirection Direction Field Value LinearGradientBrush.GradientDirection Properties Type The type of brush public IBrush.BrushType Type { get; } Property Value IBrush.BrushType Methods DrawRectangle(Vector2Int, Vector2Int) Draws a rectangle public void DrawRectangle(Vector2Int position, Vector2Int size) Parameters position Vector2Int size Vector2Int DrawRectangleRounded(Vector2Int, Vector2Int, int) Draws a rectangle with rounded corners public void DrawRectangleRounded(Vector2Int position, Vector2Int size, int radius) Parameters position Vector2Int size Vector2Int radius int DrawText(Font, string, Vector2Int, int) Draws text public void DrawText(Font font, string text, Vector2Int position, int fontSize) Parameters font Font text string position Vector2Int fontSize int Fallback() Returns a solid color if unsupported public Color Fallback() Returns Color"
  },
  "api/AbysmalCore.UI.Styling.Brushes.NineSliceBrush.html": {
    "href": "api/AbysmalCore.UI.Styling.Brushes.NineSliceBrush.html",
    "title": "Class NineSliceBrush | AbysmalCore",
    "summary": "Class NineSliceBrush Namespace AbysmalCore.UI.Styling.Brushes Assembly AbysmalCore.dll Draws a 9slice texture [DebugInfo(\"brush\", false)] public class NineSliceBrush : IBrush Inheritance object NineSliceBrush Implements IBrush Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NineSliceBrush(Image, NPatchInfo) Creates a new nine slice brush public NineSliceBrush(Image texture, NPatchInfo nineSlice) Parameters texture Image nineSlice NPatchInfo Fields NineSliceInfo Information used in drawing public NPatchInfo NineSliceInfo Field Value NPatchInfo Texture The texture to draw public Image Texture Field Value Image Properties Type The type of brush public IBrush.BrushType Type { get; } Property Value IBrush.BrushType Methods DrawRectangle(Vector2Int, Vector2Int) Draws a rectangle public void DrawRectangle(Vector2Int position, Vector2Int size) Parameters position Vector2Int size Vector2Int DrawRectangleRounded(Vector2Int, Vector2Int, int) Draws a rectangle with rounded corners public void DrawRectangleRounded(Vector2Int position, Vector2Int size, int radius) Parameters position Vector2Int size Vector2Int radius int DrawText(Font, string, Vector2Int, int) Draws text public void DrawText(Font font, string text, Vector2Int position, int fontSize) Parameters font Font text string position Vector2Int fontSize int Fallback() Returns a solid color if unsupported public Color Fallback() Returns Color"
  },
  "api/AbysmalCore.UI.Styling.Brushes.RadialGradientBrush.html": {
    "href": "api/AbysmalCore.UI.Styling.Brushes.RadialGradientBrush.html",
    "title": "Class RadialGradientBrush | AbysmalCore",
    "summary": "Class RadialGradientBrush Namespace AbysmalCore.UI.Styling.Brushes Assembly AbysmalCore.dll Draws a radial gradient [DebugInfo(\"brush\", false)] public class RadialGradientBrush : IBrush Inheritance object RadialGradientBrush Implements IBrush Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RadialGradientBrush(float, Color, Color) Creates a new radial gradient brush public RadialGradientBrush(float blending, Color inner, Color outer) Parameters blending float inner Color outer Color Fields Blending How much to blend the 2 colors public float Blending Field Value float Inner The inner color public Color Inner Field Value Color Outer The outer color public Color Outer Field Value Color Properties Type The type of brush public IBrush.BrushType Type { get; } Property Value IBrush.BrushType Methods DrawRectangle(Vector2Int, Vector2Int) Draws a rectangle public void DrawRectangle(Vector2Int position, Vector2Int size) Parameters position Vector2Int size Vector2Int DrawRectangleRounded(Vector2Int, Vector2Int, int) Draws a rectangle with rounded corners public void DrawRectangleRounded(Vector2Int position, Vector2Int size, int radius) Parameters position Vector2Int size Vector2Int radius int DrawText(Font, string, Vector2Int, int) Draws text public void DrawText(Font font, string text, Vector2Int position, int fontSize) Parameters font Font text string position Vector2Int fontSize int Fallback() Returns a solid color if unsupported public Color Fallback() Returns Color"
  },
  "api/AbysmalCore.UI.Styling.Brushes.ShaderBrush.html": {
    "href": "api/AbysmalCore.UI.Styling.Brushes.ShaderBrush.html",
    "title": "Class ShaderBrush | AbysmalCore",
    "summary": "Class ShaderBrush Namespace AbysmalCore.UI.Styling.Brushes Assembly AbysmalCore.dll Draws a shader [DebugInfo(\"brush\", false)] public class ShaderBrush : IBrush Inheritance object ShaderBrush Implements IBrush Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShaderBrush(string, string, Color) Creates a new shader brush public ShaderBrush(string fragPath, string vertPath, Color color) Parameters fragPath string vertPath string color Color Fields Shader The shader to draw public Shader Shader Field Value Shader Properties Type The type of brush public IBrush.BrushType Type { get; } Property Value IBrush.BrushType Methods DrawRectangle(Vector2Int, Vector2Int) Draws a rectangle public void DrawRectangle(Vector2Int position, Vector2Int size) Parameters position Vector2Int size Vector2Int DrawRectangleRounded(Vector2Int, Vector2Int, int) Draws a rectangle with rounded corners public void DrawRectangleRounded(Vector2Int position, Vector2Int size, int radius) Parameters position Vector2Int size Vector2Int radius int DrawText(Font, string, Vector2Int, int) Draws text public void DrawText(Font font, string text, Vector2Int position, int fontSize) Parameters font Font text string position Vector2Int fontSize int Fallback() Returns a solid color if unsupported public Color Fallback() Returns Color GetShaderUniform(string) Gets a shader uniform's location public int GetShaderUniform(string name) Parameters name string Returns int SetShaderValue<T>(int, T, ShaderUniformDataType) Sets a shader uniform public void SetShaderValue<T>(int loc, T value, ShaderUniformDataType type) where T : unmanaged Parameters loc int value T type ShaderUniformDataType Type Parameters T"
  },
  "api/AbysmalCore.UI.Styling.Brushes.SolidBrush.html": {
    "href": "api/AbysmalCore.UI.Styling.Brushes.SolidBrush.html",
    "title": "Class SolidBrush | AbysmalCore",
    "summary": "Class SolidBrush Namespace AbysmalCore.UI.Styling.Brushes Assembly AbysmalCore.dll Draws a solid color [DebugInfo(\"brush\", false)] public class SolidBrush : IBrush Inheritance object SolidBrush Implements IBrush Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SolidBrush(Color) Creates a new solid color brush public SolidBrush(Color color) Parameters color Color Fields Color Color to draw public Color Color Field Value Color Properties Type The type of brush public IBrush.BrushType Type { get; } Property Value IBrush.BrushType Methods DrawRectangle(Vector2Int, Vector2Int) Draws a rectangle public void DrawRectangle(Vector2Int position, Vector2Int size) Parameters position Vector2Int size Vector2Int DrawRectangleRounded(Vector2Int, Vector2Int, int) Draws a rectangle with rounded corners public void DrawRectangleRounded(Vector2Int position, Vector2Int size, int radius) Parameters position Vector2Int size Vector2Int radius int DrawText(Font, string, Vector2Int, int) Draws text public void DrawText(Font font, string text, Vector2Int position, int fontSize) Parameters font Font text string position Vector2Int fontSize int Fallback() public Color Fallback() Returns Color"
  },
  "api/AbysmalCore.UI.Styling.Brushes.html": {
    "href": "api/AbysmalCore.UI.Styling.Brushes.html",
    "title": "Namespace AbysmalCore.UI.Styling.Brushes | AbysmalCore",
    "summary": "Namespace AbysmalCore.UI.Styling.Brushes Classes ImageBrush Draws an image LinearGradientBrush Draws a 2-color linear gradient NineSliceBrush Draws a 9slice texture RadialGradientBrush Draws a radial gradient ShaderBrush Draws a shader SolidBrush Draws a solid color Enums LinearGradientBrush.GradientDirection The direction of the gradient"
  },
  "api/AbysmalCore.UI.Styling.IBrush.BrushType.html": {
    "href": "api/AbysmalCore.UI.Styling.IBrush.BrushType.html",
    "title": "Enum IBrush.BrushType | AbysmalCore",
    "summary": "Enum IBrush.BrushType Namespace AbysmalCore.UI.Styling Assembly AbysmalCore.dll public enum IBrush.BrushType Fields ImageBrush = 0 A brush that draws an image LinearGradientBrush = 1 A brush that draws a 2-color linear gradient NineSliceBrush = 5 A brush that draws a 9slice texture RadialGradientBrush = 2 A brush that draws a 2-color radial gradient ShaderBrush = 3 A brush that draws a shader SolidBrush = 4 A brush that draws a solid color"
  },
  "api/AbysmalCore.UI.Styling.IBrush.html": {
    "href": "api/AbysmalCore.UI.Styling.IBrush.html",
    "title": "Interface IBrush | AbysmalCore",
    "summary": "Interface IBrush Namespace AbysmalCore.UI.Styling Assembly AbysmalCore.dll Represents an abstraction of a brush used for drawing UI elements [DebugInfo(\"brush parent class\", false)] public interface IBrush Properties Type The type of brush IBrush.BrushType Type { get; } Property Value IBrush.BrushType Methods DrawRectangle(Vector2Int, Vector2Int) Draws a rectangle void DrawRectangle(Vector2Int position, Vector2Int size) Parameters position Vector2Int size Vector2Int DrawRectangleRounded(Vector2Int, Vector2Int, int) Draws a rectangle with rounded corners void DrawRectangleRounded(Vector2Int position, Vector2Int size, int radius) Parameters position Vector2Int size Vector2Int radius int DrawText(Font, string, Vector2Int, int) Draws text void DrawText(Font font, string text, Vector2Int position, int fontSize) Parameters font Font text string position Vector2Int fontSize int Fallback() Returns a solid color if unsupported Color Fallback() Returns Color"
  },
  "api/AbysmalCore.UI.Styling.Style.html": {
    "href": "api/AbysmalCore.UI.Styling.Style.html",
    "title": "Class Style | AbysmalCore",
    "summary": "Class Style Namespace AbysmalCore.UI.Styling Assembly AbysmalCore.dll Contains style information for a specific control [DebugInfo(\"control specific style\", false)] public class Style Inheritance object Style Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BorderColor The color of the border on a control public IBrush BorderColor Field Value IBrush BorderRadius How rounded the border is public int BorderRadius Field Value int BorderWeight How thick the border is public int BorderWeight Field Value int FillColor Brush to use on the interior of the control public IBrush FillColor Field Value IBrush Font Font to use when drawing text public Font Font Field Value Font TextColor Brush to use on the border of the brush public IBrush TextColor Field Value IBrush Methods ValidateBrushes(BrushType[], UIElement) Checks if the brushes used in this style are supported by the given control public void ValidateBrushes(IBrush.BrushType[] supported, UIElement control) Parameters supported BrushType[] control UIElement"
  },
  "api/AbysmalCore.UI.Styling.StyleMap.ControlStyleType.html": {
    "href": "api/AbysmalCore.UI.Styling.StyleMap.ControlStyleType.html",
    "title": "Enum StyleMap.ControlStyleType | AbysmalCore",
    "summary": "Enum StyleMap.ControlStyleType Namespace AbysmalCore.UI.Styling Assembly AbysmalCore.dll The shape style of the control public enum StyleMap.ControlStyleType Fields Rounded = 0 A control with rounded corners Sharp = 1 A control with square corners"
  },
  "api/AbysmalCore.UI.Styling.StyleMap.html": {
    "href": "api/AbysmalCore.UI.Styling.StyleMap.html",
    "title": "Struct StyleMap | AbysmalCore",
    "summary": "Struct StyleMap Namespace AbysmalCore.UI.Styling Assembly AbysmalCore.dll Contains style information for a specific control states [DebugInfo(\"control specific state styles\", false)] public struct StyleMap Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors StyleMap(bool) Creates a new style map public StyleMap(bool useGlobalTheme = false) Parameters useGlobalTheme bool Fields Activated Style to used when focused public Style Activated Field Value Style Clicked Style to use when the mouse is in the controls bounds and the left mouse button is down public Style Clicked Field Value Style ControlStyle The style of the control public StyleMap.ControlStyleType ControlStyle Field Value StyleMap.ControlStyleType Disabled Style to use when the control cannot be interacted with public Style Disabled Field Value Style Hovered Style to use when the mouse is in the controls bounds public Style Hovered Field Value Style HoveredActivated Style to use when focused and mouse is in the controls bounds public Style HoveredActivated Field Value Style HoveredDisabled Style to use when the control cannot be interacted with and the mouse is in the controls bounds public Style HoveredDisabled Field Value Style Normal Style to use when no other styles are applicable public Style Normal Field Value Style Methods ValidateBrushes(Dictionary<ControlStyleType, BrushType[]>, UIElement) Checks compatible brushes with the current ones public void ValidateBrushes(Dictionary<StyleMap.ControlStyleType, IBrush.BrushType[]> supported, UIElement control) Parameters supported Dictionary<StyleMap.ControlStyleType, IBrush.BrushType[]> control UIElement"
  },
  "api/AbysmalCore.UI.Styling.Theme.html": {
    "href": "api/AbysmalCore.UI.Styling.Theme.html",
    "title": "Struct Theme | AbysmalCore",
    "summary": "Struct Theme Namespace AbysmalCore.UI.Styling Assembly AbysmalCore.dll Represents a global theme for the user interface including palette colors and default styles [DebugInfo(\"ui global style\", false)] public struct Theme Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Theme() Creates a new theme public Theme() Theme(IBrush, IBrush, IBrush, IBrush, ControlStyleType) Creates a new theme from 3 brushes and a control style public Theme(IBrush core, IBrush layer, IBrush accent, IBrush text, StyleMap.ControlStyleType style = ControlStyleType.Rounded) Parameters core IBrush layer IBrush accent IBrush text IBrush style StyleMap.ControlStyleType Theme(Color, Color) Dynamically creates a new theme from a single color public Theme(Color c, Color text) Parameters c Color text Color Theme(Color, Color, Color, Color, ControlStyleType) Creates a new theme from 3 colors and a control style public Theme(Color core, Color layer, Color accent, Color text, StyleMap.ControlStyleType style = ControlStyleType.Rounded) Parameters core Color layer Color accent Color text Color style StyleMap.ControlStyleType Fields Accent The accent color public Color Accent Field Value Color Core The base color public Color Core Field Value Color DefaultStyleMap Stylemap to use when no brushes specified public StyleMap DefaultStyleMap Field Value StyleMap Layer The middle color public Color Layer Field Value Color Text Color to use when drawing text public Color Text Field Value Color"
  },
  "api/AbysmalCore.UI.Styling.html": {
    "href": "api/AbysmalCore.UI.Styling.html",
    "title": "Namespace AbysmalCore.UI.Styling | AbysmalCore",
    "summary": "Namespace AbysmalCore.UI.Styling Classes Style Contains style information for a specific control Structs StyleMap Contains style information for a specific control states Theme Represents a global theme for the user interface including palette colors and default styles Interfaces IBrush Represents an abstraction of a brush used for drawing UI elements Enums IBrush.BrushType StyleMap.ControlStyleType The shape style of the control"
  },
  "api/AbysmalCore.UI.UIElement.OnClickedEventArgs.html": {
    "href": "api/AbysmalCore.UI.UIElement.OnClickedEventArgs.html",
    "title": "Delegate UIElement.OnClickedEventArgs | AbysmalCore",
    "summary": "Delegate UIElement.OnClickedEventArgs Namespace AbysmalCore.UI Assembly AbysmalCore.dll Delegate for when the control is clicked public delegate void UIElement.OnClickedEventArgs(UIElement sender, Vector2Int mouse, int frame) Parameters sender UIElement mouse Vector2Int frame int"
  },
  "api/AbysmalCore.UI.UIElement.OnHoveredEventArgs.html": {
    "href": "api/AbysmalCore.UI.UIElement.OnHoveredEventArgs.html",
    "title": "Delegate UIElement.OnHoveredEventArgs | AbysmalCore",
    "summary": "Delegate UIElement.OnHoveredEventArgs Namespace AbysmalCore.UI Assembly AbysmalCore.dll Delegate for when the control is hovered over public delegate void UIElement.OnHoveredEventArgs(UIElement sender, Vector2Int mouse, int frame) Parameters sender UIElement mouse Vector2Int frame int"
  },
  "api/AbysmalCore.UI.UIElement.OnMouseEnterExitEventArgs.html": {
    "href": "api/AbysmalCore.UI.UIElement.OnMouseEnterExitEventArgs.html",
    "title": "Delegate UIElement.OnMouseEnterExitEventArgs | AbysmalCore",
    "summary": "Delegate UIElement.OnMouseEnterExitEventArgs Namespace AbysmalCore.UI Assembly AbysmalCore.dll Delegate used when the mouse enters or exits the controls bounds public delegate void UIElement.OnMouseEnterExitEventArgs(UIElement sender, Vector2Int mouse, int frame) Parameters sender UIElement mouse Vector2Int frame int"
  },
  "api/AbysmalCore.UI.UIElement.OnStateChangedEventArgs.html": {
    "href": "api/AbysmalCore.UI.UIElement.OnStateChangedEventArgs.html",
    "title": "Delegate UIElement.OnStateChangedEventArgs | AbysmalCore",
    "summary": "Delegate UIElement.OnStateChangedEventArgs Namespace AbysmalCore.UI Assembly AbysmalCore.dll The delegate to use when a property is changed public delegate void UIElement.OnStateChangedEventArgs(UIElement sender, UIElement.StateChangeType property, object newState) Parameters sender UIElement property UIElement.StateChangeType newState object"
  },
  "api/AbysmalCore.UI.UIElement.StateChangeType.html": {
    "href": "api/AbysmalCore.UI.UIElement.StateChangeType.html",
    "title": "Enum UIElement.StateChangeType | AbysmalCore",
    "summary": "Enum UIElement.StateChangeType Namespace AbysmalCore.UI Assembly AbysmalCore.dll The property that changed public enum UIElement.StateChangeType Fields Clicked = 3 The clicked property Enabled = 0 The enabled property Hovered = 2 The hovered property Visible = 1 The visibility property"
  },
  "api/AbysmalCore.UI.UIElement.html": {
    "href": "api/AbysmalCore.UI.UIElement.html",
    "title": "Class UIElement | AbysmalCore",
    "summary": "Class UIElement Namespace AbysmalCore.UI Assembly AbysmalCore.dll Represents an abstraction of a user interface element public abstract class UIElement Inheritance object UIElement Derived Button Label Panel Picture Toggle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Name Unique identifier of this UIElement (used for retrieval with GetChild(string)) public string Name Field Value string Position Position of this UIElement relative to the top left of its parent public Vector2Int Position Field Value Vector2Int Size Size of this UIElement in pixels public Vector2Int Size Field Value Vector2Int StyleMap Style map containing styles for different states of this UIElement public StyleMap StyleMap Field Value StyleMap SupportedBrushes Dictionary of supported brushes for each style type (used for validation) public Dictionary<StyleMap.ControlStyleType, IBrush.BrushType[]> SupportedBrushes Field Value Dictionary<StyleMap.ControlStyleType, IBrush.BrushType[]> _UseFallbackForUnsupportedBrushes If true, unsupported brushes will use their fallback color instead of throwing an exception protected bool _UseFallbackForUnsupportedBrushes Field Value bool Properties Children Child controls of this UIElement public List<UIElement> Children { get; } Property Value List<UIElement> Clicked Determines whether the mouse is over this UIElement and the left mouse button is held down public bool Clicked { get; set; } Property Value bool CurrentStyle Returns the current Style based on the state of this UIElement public Style CurrentStyle { get; } Property Value Style Enabled Determines whether this UIElement is enabled (can be interacted with) public bool Enabled { get; set; } Property Value bool Hovered Whether the mouse is currently hovering over this UIElement public bool Hovered { get; set; } Property Value bool Visible Determines whether this UIElement is visible (drawn) public bool Visible { get; set; } Property Value bool Methods AddChild(UIElement) Adds a child UIElement public void AddChild(UIElement element) Parameters element UIElement Disable() Disables interaction with this UIElement public virtual void Disable() Draw() Draws this UIElement and its children public void Draw() Enable() Enables interaction with this UIElement public virtual void Enable() GetChild(string) Returns the first child UIElement with the specified name public UIElement? GetChild(string name) Parameters name string Returns UIElement First instance of UIElement with name, else null GetChildren() Returns every child UIElement public UIElement[] GetChildren() Returns UIElement[] UIElement[] Hide() Hides this UIElement public virtual void Hide() RemoveChild(UIElement) Removes a child UIElement public void RemoveChild(UIElement element) Parameters element UIElement RemoveChild(string) Removes the first child UIElement with the specified name public void RemoveChild(string name) Parameters name string Show() Unhides this UIElement public virtual void Show() _draw() Draws the actual control protected abstract void _draw() Events OnClicked Fired when this UIElement is clicked public event UIElement.OnClickedEventArgs? OnClicked Event Type UIElement.OnClickedEventArgs OnHovered Fired once upon hovering over this UIElement public event UIElement.OnHoveredEventArgs? OnHovered Event Type UIElement.OnHoveredEventArgs OnMouseEnter Fired once when the mouse enters the bounds of this UIElement public event UIElement.OnMouseEnterExitEventArgs? OnMouseEnter Event Type UIElement.OnMouseEnterExitEventArgs OnMouseExit Fired once when the mouse exits the bounds of this UIElement public event UIElement.OnMouseEnterExitEventArgs? OnMouseExit Event Type UIElement.OnMouseEnterExitEventArgs OnStateChanged Fired when a state of this UIElement changes public event UIElement.OnStateChangedEventArgs? OnStateChanged Event Type UIElement.OnStateChangedEventArgs"
  },
  "api/AbysmalCore.UI.UserInterface.html": {
    "href": "api/AbysmalCore.UI.UserInterface.html",
    "title": "Class UserInterface | AbysmalCore",
    "summary": "Class UserInterface Namespace AbysmalCore.UI Assembly AbysmalCore.dll Contains methods and properties for managing the user interface [DebugInfo(\"ui manager\", false)] public class UserInterface Inheritance object UserInterface Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserInterface(List<UIElement>?) Creates a new user interface public UserInterface(List<UIElement>? elements = null) Parameters elements List<UIElement> Fields UnloadList A list of objects to unload when the window is closed. Should be Raylib_cs.Texture2D, Raylib_cs.RenderTexture2D, Raylib_cs.Image or Raylib_cs.Shader public static List<object> UnloadList Field Value List<object> Properties Elements List of all UI elements in the GUI. Should be manipulated via the provided methods. public List<UIElement> Elements { get; } Property Value List<UIElement> Frame Keeps track of the number of times DrawUI() has been called public static int Frame { get; } Property Value int Mouse Represents the current mouse position (not relative to any element) public static Vector2Int Mouse { get; } Property Value Vector2Int Methods AddElement(UIElement) Adds a UIElement to the GUI public void AddElement(UIElement element) Parameters element UIElement DrawUI() Increments frame and draws every element in the GUI public void DrawUI() GetElement(string) Returns the first UIElement with the specified name from the GUI public UIElement? GetElement(string name) Parameters name string Returns UIElement First instance of UIElement with name, else null GetElements() Returns every UIElement in the GUI public UIElement[] GetElements() Returns UIElement[] UIElement[] RemoveElement(UIElement) Removes a UIElement from the GUI public void RemoveElement(UIElement element) Parameters element UIElement RemoveElement(string) Removes the first UIElement with the specified name from the GUI public void RemoveElement(string name) Parameters name string"
  },
  "api/AbysmalCore.UI.Window.WindowState.html": {
    "href": "api/AbysmalCore.UI.Window.WindowState.html",
    "title": "Enum Window.WindowState | AbysmalCore",
    "summary": "Enum Window.WindowState Namespace AbysmalCore.UI Assembly AbysmalCore.dll Represents the current view of the window public enum Window.WindowState Fields Fullscreen = 3 Fully visible, no titlebar Maximized = 2 Fully visible Minimized = 1 Not visible, still running Normal = 0 No other states applicable"
  },
  "api/AbysmalCore.UI.Window.html": {
    "href": "api/AbysmalCore.UI.Window.html",
    "title": "Class Window | AbysmalCore",
    "summary": "Class Window Namespace AbysmalCore.UI Assembly AbysmalCore.dll Contains methods and properties for managing the application window [DebugInfo(\"window instance\", false)] public class Window Inheritance object Window Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Window(Vector2Int, string, Theme?, bool) Creates a window public Window(Vector2Int size, string title, Theme? theme = null, bool resizeable = true) Parameters size Vector2Int title string theme Theme? resizeable bool Properties GlobalTheme Global theme of colors to use by default across the GUI public static Theme GlobalTheme { get; set; } Property Value Theme Position The position of the window relative to the top left of the screen public Vector2Int Position { get; set; } Property Value Vector2Int Resizable Determines if window resize handles and maximize button are available public bool Resizable { get; set; } Property Value bool Size Size of the window in pixels public Vector2Int Size { get; set; } Property Value Vector2Int State The current state of the window (e.g. minimized, maximized, fullscreen, normal) public Window.WindowState State { get; set; } Property Value Window.WindowState Title Text caption displayed in the window title bar public string Title { get; set; } Property Value string Methods Exit() Closes the window public void Exit() Hide() Hides the window public void Hide() Init(UserInterface) Initializes the window loop with the provided UserInterface public void Init(UserInterface ui) Parameters ui UserInterface SetIcon(Vector2Int, Func<object?>) Draws and sets the window icon using the provided lambda function public void SetIcon(Vector2Int sz, Func<object?> draw) Parameters sz Vector2Int draw Func<object> SetUI(UserInterface) Updates the user interface to draw in the window loop public void SetUI(UserInterface ui) Parameters ui UserInterface Show() Unhides the window public void Show()"
  },
  "api/AbysmalCore.UI.html": {
    "href": "api/AbysmalCore.UI.html",
    "title": "Namespace AbysmalCore.UI | AbysmalCore",
    "summary": "Namespace AbysmalCore.UI Classes DwmPInvokeHelper Windows-platform specific window helper UIElement Represents an abstraction of a user interface element UserInterface Contains methods and properties for managing the user interface Window Contains methods and properties for managing the application window Enums DwmPInvokeHelper.MaterialType Type of window material UIElement.StateChangeType The property that changed Window.WindowState Represents the current view of the window Delegates UIElement.OnClickedEventArgs Delegate for when the control is clicked UIElement.OnHoveredEventArgs Delegate for when the control is hovered over UIElement.OnMouseEnterExitEventArgs Delegate used when the mouse enters or exits the controls bounds UIElement.OnStateChangedEventArgs The delegate to use when a property is changed"
  },
  "api/AbysmalCore.Vector2Int.html": {
    "href": "api/AbysmalCore.Vector2Int.html",
    "title": "Struct Vector2Int | AbysmalCore",
    "summary": "Struct Vector2Int Namespace AbysmalCore Assembly AbysmalCore.dll Represents a 2D vector with integer components public struct Vector2Int Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Vector2Int(int) Creates a new vector from 1 int public Vector2Int(int n) Parameters n int Vector2Int(int, int) Creates a new vector from 2 ints public Vector2Int(int x, int y) Parameters x int y int Vector2Int(Vector2) Creates a new vector from a Vector2 public Vector2Int(Vector2 v) Parameters v Vector2 Vector2Int(float) Creates a new vector from 1 float public Vector2Int(float n) Parameters n float Vector2Int(float, float) Creates a new vector from 2 floats public Vector2Int(float x, float y) Parameters x float y float Fields X The x axis public int X Field Value int Y The y axis public int Y Field Value int Methods ToSys() public Vector2 ToSys() Returns Vector2"
  },
  "api/AbysmalCore.html": {
    "href": "api/AbysmalCore.html",
    "title": "Namespace AbysmalCore | AbysmalCore",
    "summary": "Namespace AbysmalCore Classes AbysmalConsole Standard formatted console input and output handler Structs Vector2Int Represents a 2D vector with integer components"
  },
  "articles/getting-started.html": {
    "href": "articles/getting-started.html",
    "title": "Getting Started | AbysmalCore",
    "summary": "Getting Started"
  },
  "articles/introduction.html": {
    "href": "articles/introduction.html",
    "title": "Introduction | AbysmalCore",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "AbysmalCore | AbysmalCore",
    "summary": "AbysmalCore AbysmalCore is the standard library with utilities, debugging suite and GUI system that all my future apps will use. AbysmalCore.Extensibility A clean and uniform framework for runtime compilation and reflection of C# source files. Example // compile the assembly and get the test class Assembly testAssembly = AbysmalExtensibility.CompileAssembly(File.ReadAllText(\".\\\\ExtensibilityTest.cs\")); AbysmalExtensibilityClass testClass = AbysmalExtensibility.GetClass(testAssembly, \"Tests.ExtensibilityTest\", true); string output = \"\"; // check if the method exists, then invoke it if (testClass.HasMethod(\"TestWith1Arg\")) output = testClass.Methods[\"TestWith1Arg\"].Invoke<string>(\"Hello!\"); AbysmalDebug.Log(testClass.Instance, output, true); AbysmalCore.Debugging This map outlines the public static methods and properties for the primary debugging class, AbysmalDebug. AbysmalDebug.Warn(this, \"Warning!\");"
  }
}